function cov_2h99awej7m(){var path="/home/marcus/UNI/Year 3/COS 301/Capstone/Feature-Improvments/3D-model-Binary-Vision/Application/api/controller/UploadController.js";var hash="a07c0b59712bb030326d31fcada33fbb45736cfb";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/marcus/UNI/Year 3/COS 301/Capstone/Feature-Improvments/3D-model-Binary-Vision/Application/api/controller/UploadController.js",statementMap:{"0":{start:{line:4,column:19},end:{line:4,column:40}},"1":{start:{line:5,column:24},end:{line:5,column:50}},"2":{start:{line:6,column:17},end:{line:6,column:36}},"3":{start:{line:7,column:15},end:{line:7,column:32}},"4":{start:{line:8,column:11},end:{line:8,column:24}},"5":{start:{line:9,column:13},end:{line:9,column:28}},"6":{start:{line:10,column:17},end:{line:10,column:41}},"7":{start:{line:11,column:20},end:{line:11,column:38}},"8":{start:{line:13,column:0},end:{line:127,column:1}},"9":{start:{line:20,column:21},end:{line:20,column:52}},"10":{start:{line:22,column:8},end:{line:121,column:11}},"11":{start:{line:24,column:12},end:{line:24,column:32}},"12":{start:{line:26,column:12},end:{line:30,column:13}},"13":{start:{line:28,column:16},end:{line:28,column:33}},"14":{start:{line:29,column:16},end:{line:29,column:23}},"15":{start:{line:32,column:27},end:{line:32,column:32}},"16":{start:{line:34,column:12},end:{line:120,column:13}},"17":{start:{line:37,column:16},end:{line:37,column:47}},"18":{start:{line:38,column:16},end:{line:38,column:45}},"19":{start:{line:39,column:16},end:{line:39,column:23}},"20":{start:{line:47,column:24},end:{line:47,column:34}},"21":{start:{line:48,column:24},end:{line:48,column:85}},"22":{start:{line:50,column:16},end:{line:50,column:34}},"23":{start:{line:51,column:28},end:{line:51,column:29}},"24":{start:{line:52,column:16},end:{line:57,column:17}},"25":{start:{line:55,column:20},end:{line:55,column:93}},"26":{start:{line:56,column:20},end:{line:56,column:28}},"27":{start:{line:59,column:16},end:{line:59,column:38}},"28":{start:{line:63,column:41},end:{line:63,column:73}},"29":{start:{line:64,column:16},end:{line:64,column:46}},"30":{start:{line:65,column:24},end:{line:65,column:37}},"31":{start:{line:67,column:16},end:{line:117,column:19}},"32":{start:{line:68,column:20},end:{line:68,column:40}},"33":{start:{line:69,column:20},end:{line:69,column:40}},"34":{start:{line:70,column:20},end:{line:116,column:21}},"35":{start:{line:71,column:24},end:{line:71,column:80}},"36":{start:{line:78,column:24},end:{line:78,column:51}},"37":{start:{line:81,column:43},end:{line:81,column:92}},"38":{start:{line:82,column:42},end:{line:82,column:97}},"39":{start:{line:83,column:38},end:{line:83,column:51}},"40":{start:{line:84,column:40},end:{line:87,column:27}},"41":{start:{line:88,column:24},end:{line:110,column:27}},"42":{start:{line:89,column:28},end:{line:109,column:29}},"43":{start:{line:91,column:32},end:{line:91,column:46}},"44":{start:{line:94,column:53},end:{line:100,column:34}},"45":{start:{line:101,column:32},end:{line:108,column:35}},"46":{start:{line:103,column:36},end:{line:106,column:37}},"47":{start:{line:105,column:38},end:{line:105,column:52}},"48":{start:{line:107,column:36},end:{line:107,column:52}},"49":{start:{line:115,column:24},end:{line:115,column:56}},"50":{start:{line:124,column:8},end:{line:124,column:15}},"51":{start:{line:137,column:4},end:{line:147,column:5}},"52":{start:{line:138,column:8},end:{line:145,column:11}},"53":{start:{line:139,column:29},end:{line:139,column:55}},"54":{start:{line:140,column:12},end:{line:144,column:13}},"55":{start:{line:141,column:16},end:{line:141,column:35}},"56":{start:{line:143,column:16},end:{line:143,column:42}},"57":{start:{line:146,column:8},end:{line:146,column:31}},"58":{start:{line:154,column:4},end:{line:158,column:5}},"59":{start:{line:155,column:8},end:{line:157,column:9}},"60":{start:{line:156,column:12},end:{line:156,column:25}},"61":{start:{line:159,column:2},end:{line:159,column:52}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:18,column:18},end:{line:18,column:19}},loc:{start:{line:19,column:4},end:{line:126,column:5}},line:19},"1":{name:"(anonymous_1)",decl:{start:{line:22,column:24},end:{line:22,column:25}},loc:{start:{line:23,column:8},end:{line:121,column:9}},line:23},"2":{name:"(anonymous_2)",decl:{start:{line:67,column:75},end:{line:67,column:76}},loc:{start:{line:67,column:102},end:{line:117,column:17}},line:67},"3":{name:"(anonymous_3)",decl:{start:{line:88,column:56},end:{line:88,column:57}},loc:{start:{line:88,column:71},end:{line:110,column:25}},line:88},"4":{name:"(anonymous_4)",decl:{start:{line:101,column:50},end:{line:101,column:51}},loc:{start:{line:102,column:32},end:{line:108,column:33}},line:102},"5":{name:"rimraf",decl:{start:{line:136,column:9},end:{line:136,column:15}},loc:{start:{line:136,column:26},end:{line:148,column:1}},line:136},"6":{name:"(anonymous_6)",decl:{start:{line:138,column:41},end:{line:138,column:42}},loc:{start:{line:138,column:57},end:{line:145,column:9}},line:138},"7":{name:"isEmpty",decl:{start:{line:153,column:9},end:{line:153,column:16}},loc:{start:{line:153,column:22},end:{line:160,column:1}},line:153}},branchMap:{"0":{loc:{start:{line:26,column:12},end:{line:30,column:13}},type:"if",locations:[{start:{line:26,column:12},end:{line:30,column:13}},{start:{line:26,column:12},end:{line:30,column:13}}],line:26},"1":{loc:{start:{line:34,column:12},end:{line:120,column:13}},type:"if",locations:[{start:{line:34,column:12},end:{line:120,column:13}},{start:{line:34,column:12},end:{line:120,column:13}}],line:34},"2":{loc:{start:{line:34,column:16},end:{line:34,column:42}},type:"binary-expr",locations:[{start:{line:34,column:16},end:{line:34,column:23}},{start:{line:34,column:27},end:{line:34,column:42}}],line:34},"3":{loc:{start:{line:70,column:20},end:{line:116,column:21}},type:"if",locations:[{start:{line:70,column:20},end:{line:116,column:21}},{start:{line:70,column:20},end:{line:116,column:21}}],line:70},"4":{loc:{start:{line:89,column:28},end:{line:109,column:29}},type:"if",locations:[{start:{line:89,column:28},end:{line:109,column:29}},{start:{line:89,column:28},end:{line:109,column:29}}],line:89},"5":{loc:{start:{line:103,column:36},end:{line:106,column:37}},type:"if",locations:[{start:{line:103,column:36},end:{line:106,column:37}},{start:{line:103,column:36},end:{line:106,column:37}}],line:103},"6":{loc:{start:{line:137,column:4},end:{line:147,column:5}},type:"if",locations:[{start:{line:137,column:4},end:{line:147,column:5}},{start:{line:137,column:4},end:{line:147,column:5}}],line:137},"7":{loc:{start:{line:140,column:12},end:{line:144,column:13}},type:"if",locations:[{start:{line:140,column:12},end:{line:144,column:13}},{start:{line:140,column:12},end:{line:144,column:13}}],line:140},"8":{loc:{start:{line:155,column:8},end:{line:157,column:9}},type:"if",locations:[{start:{line:155,column:8},end:{line:157,column:9}},{start:{line:155,column:8},end:{line:157,column:9}}],line:155}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"a07c0b59712bb030326d31fcada33fbb45736cfb"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_2h99awej7m=function(){return actualCoverage;};}return actualCoverage;}cov_2h99awej7m();//file creates by: Jacobus Janse van Rensburg
//controller for all the uploads and retrievals as well as the integrating of the c++ program 
const formidable=(cov_2h99awej7m().s[0]++,require("formidable"));const{createModel}=(cov_2h99awej7m().s[1]++,require('mongoose-gridfs'));const mongoose=(cov_2h99awej7m().s[2]++,require("mongoose"));const multer=(cov_2h99awej7m().s[3]++,require('multer'));const fs=(cov_2h99awej7m().s[4]++,require('fs'));const path=(cov_2h99awej7m().s[5]++,require('path'));const{exec}=(cov_2h99awej7m().s[6]++,require('child_process'));const{Console}=(cov_2h99awej7m().s[7]++,require("console"));cov_2h99awej7m().s[8]++;module.exports={//================================================================================================
// Function developed by: Jacobus Janse van Rensburg
// Function used to upload multiple images , store them in a temp directory/file and start the c++ program
uploadImages:function(req,res){cov_2h99awej7m().f[0]++;const form=(cov_2h99awej7m().s[9]++,formidable({multiples:true}));cov_2h99awej7m().s[10]++;form.parse(req,(err,fields,files)=>{cov_2h99awej7m().f[1]++;cov_2h99awej7m().s[11]++;console.log(fields);cov_2h99awej7m().s[12]++;if(err){cov_2h99awej7m().b[0][0]++;cov_2h99awej7m().s[13]++;console.log(err);cov_2h99awej7m().s[14]++;return;}else{cov_2h99awej7m().b[0][1]++;}// console.log(files);
const images=(cov_2h99awej7m().s[15]++,files);cov_2h99awej7m().s[16]++;if((cov_2h99awej7m().b[2][0]++,!images)||(cov_2h99awej7m().b[2][1]++,isEmpty(images))){cov_2h99awej7m().b[1][0]++;cov_2h99awej7m().s[17]++;//if no images was sent we handle this by returning a error status 404
console.log("No photos found");cov_2h99awej7m().s[18]++;res.status(404).send(images);cov_2h99awej7m().s[19]++;return;}else{cov_2h99awej7m().b[1][1]++;//get image data from disk using path (use fs package)
//use the file paths to send the images to the c++ program to find the images
//temp store file 
var f=(cov_2h99awej7m().s[20]++,Date.now());var dir=(cov_2h99awej7m().s[21]++,"sfmAlgorithm_linux/Executable/imageData/"+req.user+"-"+f+"/");// console.log("making directory : "+ dir);
cov_2h99awej7m().s[22]++;fs.mkdirSync(dir);var count=(cov_2h99awej7m().s[23]++,0);cov_2h99awej7m().s[24]++;for(let image of images["images[]"]){cov_2h99awej7m().s[25]++;// console.log("Saving image: "+image.name);
fs.copyFileSync(image.path,path.join(dir,image.name+"-"+count+".png"));cov_2h99awej7m().s[26]++;count++;}cov_2h99awej7m().s[27]++;console.log("\n\n\n");//connect c++ program here and send file name when done c++ deletes file
//using spawn as a chid-process 
const workingDirectory=(cov_2h99awej7m().s[28]++,"sfmAlgorithm_linux/Executable/");cov_2h99awej7m().s[29]++;console.log(workingDirectory);var d=(cov_2h99awej7m().s[30]++,"sample_test");//req.user+"-"+f;
cov_2h99awej7m().s[31]++;exec(`./main ${d}`,{cwd:workingDirectory,shell:true},(error,stdout,stderr)=>{cov_2h99awej7m().f[2]++;cov_2h99awej7m().s[32]++;console.log(stdout);cov_2h99awej7m().s[33]++;console.log(stderr);cov_2h99awej7m().s[34]++;if(error){cov_2h99awej7m().b[3][0]++;cov_2h99awej7m().s[35]++;console.log(`Process exited with error: ${error.code}`);//remove created directories
// console.log("Deleting directory "+ dir);
// rimraf(dir);
cov_2h99awej7m().s[36]++;return res.sendStatus(500);}else{cov_2h99awej7m().b[3][1]++;//get stl file and save it to a consultations ID
var fileLocation=(cov_2h99awej7m().s[37]++,"smfAlgorith,_linux/Executable/output_obj/"+d+"/");const objStream=(cov_2h99awej7m().s[38]++,fs.createReadStream(path.join(fileLocation,d+".obj")));const Files=(cov_2h99awej7m().s[39]++,createModel());const options=(cov_2h99awej7m().s[40]++,{filename:video.name,contentType:video.type});cov_2h99awej7m().s[41]++;Files.write(options,objStream,(err,file)=>{cov_2h99awej7m().f[3]++;cov_2h99awej7m().s[42]++;if(err){cov_2h99awej7m().b[4][0]++;cov_2h99awej7m().s[43]++;res.send(err);}else{cov_2h99awej7m().b[4][1]++;const consultation=(cov_2h99awej7m().s[44]++,new Consultation({doctor:req.user,// get from session, e.g. cookies
patient:fields.id,STL:file._id,Note:"Video Upload"}));cov_2h99awej7m().s[45]++;consultation.save(function(err){cov_2h99awej7m().f[4]++;cov_2h99awej7m().s[46]++;if(err){cov_2h99awej7m().b[5][0]++;cov_2h99awej7m().s[47]++;res.send(400);}else{cov_2h99awej7m().b[5][1]++;}cov_2h99awej7m().s[48]++;res.status(201);});}});//remove created directories 
// console.log("Deleting directory "+ dir);
// rimraf(dir);
cov_2h99awej7m().s[49]++;res.status(200).send("Success");}});}});//remove directory to save space
cov_2h99awej7m().s[50]++;return;}};//remove a directory of images to savespace on the server 
/**
 * Remove directory recursively
 * @param {string} dir_path
 * @see https://stackoverflow.com/a/42505874/3027390
 */function rimraf(dir_path){cov_2h99awej7m().f[5]++;cov_2h99awej7m().s[51]++;if(fs.existsSync(dir_path)){cov_2h99awej7m().b[6][0]++;cov_2h99awej7m().s[52]++;fs.readdirSync(dir_path).forEach(function(entry){cov_2h99awej7m().f[6]++;var entry_path=(cov_2h99awej7m().s[53]++,path.join(dir_path,entry));cov_2h99awej7m().s[54]++;if(fs.lstatSync(entry_path).isDirectory()){cov_2h99awej7m().b[7][0]++;cov_2h99awej7m().s[55]++;rimraf(entry_path);}else{cov_2h99awej7m().b[7][1]++;cov_2h99awej7m().s[56]++;fs.unlinkSync(entry_path);}});cov_2h99awej7m().s[57]++;fs.rmdirSync(dir_path);}else{cov_2h99awej7m().b[6][1]++;}}//================================================================================================
// Function developed by: Marcus Werren
// Function used to check if images object is empty
function isEmpty(obj){cov_2h99awej7m().f[7]++;cov_2h99awej7m().s[58]++;for(var prop in obj){cov_2h99awej7m().s[59]++;if(obj.hasOwnProperty(prop)){cov_2h99awej7m().b[8][0]++;cov_2h99awej7m().s[60]++;return false;}else{cov_2h99awej7m().b[8][1]++;}}cov_2h99awej7m().s[61]++;return JSON.stringify(obj)===JSON.stringify({});}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,