function cov_bkm6v7z4c(){var path="/home/marcus/UNI/Year 3/COS 301/Capstone/redemo/3D-model-Binary-Vision/Application/api/controller/UploadController.js";var hash="9057d3f22d6c2f9297544d13299212191f6aa273";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/marcus/UNI/Year 3/COS 301/Capstone/redemo/3D-model-Binary-Vision/Application/api/controller/UploadController.js",statementMap:{"0":{start:{line:4,column:21},end:{line:4,column:69}},"1":{start:{line:5,column:19},end:{line:5,column:40}},"2":{start:{line:6,column:24},end:{line:6,column:50}},"3":{start:{line:7,column:17},end:{line:7,column:36}},"4":{start:{line:8,column:15},end:{line:8,column:32}},"5":{start:{line:9,column:11},end:{line:9,column:24}},"6":{start:{line:10,column:13},end:{line:10,column:28}},"7":{start:{line:11,column:17},end:{line:11,column:41}},"8":{start:{line:12,column:20},end:{line:12,column:38}},"9":{start:{line:14,column:0},end:{line:187,column:1}},"10":{start:{line:21,column:21},end:{line:21,column:52}},"11":{start:{line:23,column:8},end:{line:181,column:11}},"12":{start:{line:25,column:12},end:{line:25,column:32}},"13":{start:{line:27,column:12},end:{line:31,column:13}},"14":{start:{line:29,column:16},end:{line:29,column:33}},"15":{start:{line:30,column:16},end:{line:30,column:23}},"16":{start:{line:33,column:27},end:{line:33,column:32}},"17":{start:{line:35,column:12},end:{line:180,column:13}},"18":{start:{line:38,column:16},end:{line:38,column:47}},"19":{start:{line:39,column:16},end:{line:39,column:45}},"20":{start:{line:40,column:16},end:{line:40,column:23}},"21":{start:{line:48,column:24},end:{line:48,column:34}},"22":{start:{line:49,column:24},end:{line:49,column:85}},"23":{start:{line:51,column:16},end:{line:51,column:34}},"24":{start:{line:52,column:28},end:{line:52,column:29}},"25":{start:{line:53,column:16},end:{line:58,column:17}},"26":{start:{line:56,column:20},end:{line:56,column:93}},"27":{start:{line:57,column:20},end:{line:57,column:28}},"28":{start:{line:60,column:16},end:{line:60,column:38}},"29":{start:{line:64,column:41},end:{line:64,column:73}},"30":{start:{line:65,column:16},end:{line:65,column:46}},"31":{start:{line:66,column:24},end:{line:66,column:38}},"32":{start:{line:68,column:16},end:{line:177,column:19}},"33":{start:{line:69,column:20},end:{line:69,column:40}},"34":{start:{line:70,column:20},end:{line:70,column:40}},"35":{start:{line:71,column:20},end:{line:176,column:21}},"36":{start:{line:72,column:24},end:{line:72,column:80}},"37":{start:{line:75,column:24},end:{line:75,column:64}},"38":{start:{line:76,column:24},end:{line:76,column:36}},"39":{start:{line:79,column:24},end:{line:79,column:51}},"40":{start:{line:82,column:43},end:{line:82,column:92}},"41":{start:{line:83,column:42},end:{line:83,column:97}},"42":{start:{line:84,column:45},end:{line:84,column:117}},"43":{start:{line:85,column:42},end:{line:85,column:97}},"44":{start:{line:86,column:38},end:{line:86,column:51}},"45":{start:{line:90,column:43},end:{line:93,column:27}},"46":{start:{line:95,column:42},end:{line:98,column:25}},"47":{start:{line:100,column:41},end:{line:103,column:25}},"48":{start:{line:107,column:24},end:{line:170,column:27}},"49":{start:{line:108,column:28},end:{line:111,column:29}},"50":{start:{line:110,column:32},end:{line:110,column:79}},"51":{start:{line:113,column:28},end:{line:113,column:59}},"52":{start:{line:116,column:28},end:{line:167,column:31}},"53":{start:{line:117,column:32},end:{line:119,column:33}},"54":{start:{line:118,column:36},end:{line:118,column:84}},"55":{start:{line:121,column:32},end:{line:121,column:67}},"56":{start:{line:124,column:32},end:{line:165,column:35}},"57":{start:{line:125,column:36},end:{line:127,column:37}},"58":{start:{line:126,column:40},end:{line:126,column:88}},"59":{start:{line:129,column:36},end:{line:129,column:67}},"60":{start:{line:131,column:48},end:{line:131,column:58}},"61":{start:{line:132,column:47},end:{line:132,column:117}},"62":{start:{line:134,column:57},end:{line:143,column:38}},"63":{start:{line:145,column:36},end:{line:163,column:39}},"64":{start:{line:147,column:40},end:{line:162,column:41}},"65":{start:{line:149,column:42},end:{line:149,column:58}},"66":{start:{line:150,column:42},end:{line:150,column:98}},"67":{start:{line:153,column:44},end:{line:153,column:85}},"68":{start:{line:155,column:68},end:{line:155,column:109}},"69":{start:{line:156,column:44},end:{line:156,column:74}},"70":{start:{line:158,column:44},end:{line:158,column:128}},"71":{start:{line:159,column:44},end:{line:159,column:157}},"72":{start:{line:160,column:44},end:{line:160,column:128}},"73":{start:{line:161,column:44},end:{line:161,column:60}},"74":{start:{line:173,column:24},end:{line:173,column:64}},"75":{start:{line:174,column:24},end:{line:174,column:36}},"76":{start:{line:175,column:24},end:{line:175,column:56}},"77":{start:{line:184,column:8},end:{line:184,column:15}},"78":{start:{line:197,column:4},end:{line:207,column:5}},"79":{start:{line:198,column:8},end:{line:205,column:11}},"80":{start:{line:199,column:29},end:{line:199,column:55}},"81":{start:{line:200,column:12},end:{line:204,column:13}},"82":{start:{line:201,column:16},end:{line:201,column:35}},"83":{start:{line:203,column:16},end:{line:203,column:42}},"84":{start:{line:206,column:8},end:{line:206,column:31}},"85":{start:{line:214,column:4},end:{line:218,column:5}},"86":{start:{line:215,column:8},end:{line:217,column:9}},"87":{start:{line:216,column:12},end:{line:216,column:25}},"88":{start:{line:219,column:2},end:{line:219,column:52}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:19,column:18},end:{line:19,column:19}},loc:{start:{line:20,column:4},end:{line:186,column:5}},line:20},"1":{name:"(anonymous_1)",decl:{start:{line:23,column:24},end:{line:23,column:25}},loc:{start:{line:24,column:8},end:{line:181,column:9}},line:24},"2":{name:"(anonymous_2)",decl:{start:{line:68,column:75},end:{line:68,column:76}},loc:{start:{line:68,column:102},end:{line:177,column:17}},line:68},"3":{name:"(anonymous_3)",decl:{start:{line:107,column:59},end:{line:107,column:60}},loc:{start:{line:107,column:74},end:{line:170,column:25}},line:107},"4":{name:"(anonymous_4)",decl:{start:{line:116,column:64},end:{line:116,column:65}},loc:{start:{line:116,column:85},end:{line:167,column:29}},line:116},"5":{name:"(anonymous_5)",decl:{start:{line:124,column:68},end:{line:124,column:69}},loc:{start:{line:124,column:88},end:{line:165,column:33}},line:124},"6":{name:"(anonymous_6)",decl:{start:{line:145,column:54},end:{line:145,column:55}},loc:{start:{line:146,column:36},end:{line:163,column:37}},line:146},"7":{name:"rimraf",decl:{start:{line:196,column:9},end:{line:196,column:15}},loc:{start:{line:196,column:26},end:{line:208,column:1}},line:196},"8":{name:"(anonymous_8)",decl:{start:{line:198,column:41},end:{line:198,column:42}},loc:{start:{line:198,column:57},end:{line:205,column:9}},line:198},"9":{name:"isEmpty",decl:{start:{line:213,column:9},end:{line:213,column:16}},loc:{start:{line:213,column:22},end:{line:220,column:1}},line:213}},branchMap:{"0":{loc:{start:{line:27,column:12},end:{line:31,column:13}},type:"if",locations:[{start:{line:27,column:12},end:{line:31,column:13}},{start:{line:27,column:12},end:{line:31,column:13}}],line:27},"1":{loc:{start:{line:35,column:12},end:{line:180,column:13}},type:"if",locations:[{start:{line:35,column:12},end:{line:180,column:13}},{start:{line:35,column:12},end:{line:180,column:13}}],line:35},"2":{loc:{start:{line:35,column:16},end:{line:35,column:42}},type:"binary-expr",locations:[{start:{line:35,column:16},end:{line:35,column:23}},{start:{line:35,column:27},end:{line:35,column:42}}],line:35},"3":{loc:{start:{line:71,column:20},end:{line:176,column:21}},type:"if",locations:[{start:{line:71,column:20},end:{line:176,column:21}},{start:{line:71,column:20},end:{line:176,column:21}}],line:71},"4":{loc:{start:{line:108,column:28},end:{line:111,column:29}},type:"if",locations:[{start:{line:108,column:28},end:{line:111,column:29}},{start:{line:108,column:28},end:{line:111,column:29}}],line:108},"5":{loc:{start:{line:117,column:32},end:{line:119,column:33}},type:"if",locations:[{start:{line:117,column:32},end:{line:119,column:33}},{start:{line:117,column:32},end:{line:119,column:33}}],line:117},"6":{loc:{start:{line:125,column:36},end:{line:127,column:37}},type:"if",locations:[{start:{line:125,column:36},end:{line:127,column:37}},{start:{line:125,column:36},end:{line:127,column:37}}],line:125},"7":{loc:{start:{line:147,column:40},end:{line:162,column:41}},type:"if",locations:[{start:{line:147,column:40},end:{line:162,column:41}},{start:{line:147,column:40},end:{line:162,column:41}}],line:147},"8":{loc:{start:{line:197,column:4},end:{line:207,column:5}},type:"if",locations:[{start:{line:197,column:4},end:{line:207,column:5}},{start:{line:197,column:4},end:{line:207,column:5}}],line:197},"9":{loc:{start:{line:200,column:12},end:{line:204,column:13}},type:"if",locations:[{start:{line:200,column:12},end:{line:204,column:13}},{start:{line:200,column:12},end:{line:204,column:13}}],line:200},"10":{loc:{start:{line:215,column:8},end:{line:217,column:9}},type:"if",locations:[{start:{line:215,column:8},end:{line:217,column:9}},{start:{line:215,column:8},end:{line:217,column:9}}],line:215}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"9057d3f22d6c2f9297544d13299212191f6aa273"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_bkm6v7z4c=function(){return actualCoverage;};}return actualCoverage;}cov_bkm6v7z4c();//file creates by: Jacobus Janse van Rensburg
//controller for all the uploads and retrievals as well as the integrating of the c++ program 
const Consultation=(cov_bkm6v7z4c().s[0]++,require("../model/3DModelModel.js").Consultation);const formidable=(cov_bkm6v7z4c().s[1]++,require("formidable"));const{createModel}=(cov_bkm6v7z4c().s[2]++,require('mongoose-gridfs'));const mongoose=(cov_bkm6v7z4c().s[3]++,require("mongoose"));const multer=(cov_bkm6v7z4c().s[4]++,require('multer'));const fs=(cov_bkm6v7z4c().s[5]++,require('fs'));const path=(cov_bkm6v7z4c().s[6]++,require('path'));const{exec}=(cov_bkm6v7z4c().s[7]++,require('child_process'));const{Console}=(cov_bkm6v7z4c().s[8]++,require("console"));cov_bkm6v7z4c().s[9]++;module.exports={//================================================================================================
// Function developed by: Jacobus Janse van Rensburg
// Function used to upload multiple images , store them in a temp directory/file and start the c++ program
uploadImages:function(req,res){cov_bkm6v7z4c().f[0]++;const form=(cov_bkm6v7z4c().s[10]++,formidable({multiples:true}));cov_bkm6v7z4c().s[11]++;form.parse(req,(err,fields,files)=>{cov_bkm6v7z4c().f[1]++;cov_bkm6v7z4c().s[12]++;console.log(fields);cov_bkm6v7z4c().s[13]++;if(err){cov_bkm6v7z4c().b[0][0]++;cov_bkm6v7z4c().s[14]++;console.log(err);cov_bkm6v7z4c().s[15]++;return;}else{cov_bkm6v7z4c().b[0][1]++;}// console.log(files);
const images=(cov_bkm6v7z4c().s[16]++,files);cov_bkm6v7z4c().s[17]++;if((cov_bkm6v7z4c().b[2][0]++,!images)||(cov_bkm6v7z4c().b[2][1]++,isEmpty(images))){cov_bkm6v7z4c().b[1][0]++;cov_bkm6v7z4c().s[18]++;//if no images was sent we handle this by returning a error status 404
console.log("No photos found");cov_bkm6v7z4c().s[19]++;res.status(404).send(images);cov_bkm6v7z4c().s[20]++;return;}else{cov_bkm6v7z4c().b[1][1]++;//get image data from disk using path (use fs package)
//use the file paths to send the images to the c++ program to find the images
//temp store file 
var f=(cov_bkm6v7z4c().s[21]++,Date.now());var dir=(cov_bkm6v7z4c().s[22]++,"sfmAlgorithm_linux/Executable/imageData/"+req.user+"-"+f+"/");// console.log("making directory : "+ dir);
cov_bkm6v7z4c().s[23]++;fs.mkdirSync(dir);var count=(cov_bkm6v7z4c().s[24]++,0);cov_bkm6v7z4c().s[25]++;for(let image of images["images[]"]){cov_bkm6v7z4c().s[26]++;// console.log("Saving image: "+image.name);
fs.copyFileSync(image.path,path.join(dir,image.name+"-"+count+".png"));cov_bkm6v7z4c().s[27]++;count++;}cov_bkm6v7z4c().s[28]++;console.log("\n\n\n");//connect c++ program here and send file name when done c++ deletes file
//using spawn as a chid-process
const workingDirectory=(cov_bkm6v7z4c().s[29]++,"sfmAlgorithm_linux/Executable/");cov_bkm6v7z4c().s[30]++;console.log(workingDirectory);var d=(cov_bkm6v7z4c().s[31]++,req.user+"-"+f);cov_bkm6v7z4c().s[32]++;exec(`./main ${d}`,{cwd:workingDirectory,shell:true},(error,stdout,stderr)=>{cov_bkm6v7z4c().f[2]++;cov_bkm6v7z4c().s[33]++;console.log(stdout);cov_bkm6v7z4c().s[34]++;console.log(stderr);cov_bkm6v7z4c().s[35]++;if(error){cov_bkm6v7z4c().b[3][0]++;cov_bkm6v7z4c().s[36]++;console.log(`Process exited with error: ${error.code}`);//remove created directories
cov_bkm6v7z4c().s[37]++;console.log("Deleting directory "+dir);cov_bkm6v7z4c().s[38]++;rimraf(dir);cov_bkm6v7z4c().s[39]++;return res.sendStatus(500);}else{cov_bkm6v7z4c().b[3][1]++;//get stl file and save it to a consultations ID
var fileLocation=(cov_bkm6v7z4c().s[40]++,"sfmAlgorithm_linux/Executable/output_obj/"+d+"/");const objStream=(cov_bkm6v7z4c().s[41]++,fs.createReadStream(path.join(fileLocation,d+".obj")));const textureStrem=(cov_bkm6v7z4c().s[42]++,fs.createReadStream(path.join(fileLocation,d+"_material_0_map_Kd.jpg")));const mtlStream=(cov_bkm6v7z4c().s[43]++,fs.createReadStream(path.join(fileLocation,d+".mtl")));const Files=(cov_bkm6v7z4c().s[44]++,createModel());const OBJoptions=(cov_bkm6v7z4c().s[45]++,{filename:d+".obj",contentType:"text/plain"});const TEXoptions=(cov_bkm6v7z4c().s[46]++,{filename:d+"_material_0_map_Kd.jpg",contentType:"image/jpg"});const MTLoptions=(cov_bkm6v7z4c().s[47]++,{filename:d+"mtl",contentType:"text/plain"});cov_bkm6v7z4c().s[48]++;Files.write(OBJoptions,objStream,(err,file)=>{cov_bkm6v7z4c().f[3]++;cov_bkm6v7z4c().s[49]++;if(err){cov_bkm6v7z4c().b[4][0]++;cov_bkm6v7z4c().s[50]++;console.log("error finding or saving obj file");}else{cov_bkm6v7z4c().b[4][1]++;}cov_bkm6v7z4c().s[51]++;console.log("Saving OBJ file");cov_bkm6v7z4c().s[52]++;Files.write(TEXoptions,textureStrem,(texErr,texfile)=>{cov_bkm6v7z4c().f[4]++;cov_bkm6v7z4c().s[53]++;if(texErr){cov_bkm6v7z4c().b[5][0]++;cov_bkm6v7z4c().s[54]++;console.log("error finding or saving tex file");}else{cov_bkm6v7z4c().b[5][1]++;}cov_bkm6v7z4c().s[55]++;console.log("Saving texture file");cov_bkm6v7z4c().s[56]++;Files.write(MTLoptions,mtlStream,(mtlErr,mtlfile)=>{cov_bkm6v7z4c().f[5]++;cov_bkm6v7z4c().s[57]++;if(mtlErr){cov_bkm6v7z4c().b[6][0]++;cov_bkm6v7z4c().s[58]++;console.log("Error finding or saving mtl file");}else{cov_bkm6v7z4c().b[6][1]++;}cov_bkm6v7z4c().s[59]++;console.log("Saving mtl file");var today=(cov_bkm6v7z4c().s[60]++,new Date());var date=(cov_bkm6v7z4c().s[61]++,today.getDate()+'/'+(today.getMonth()+1)+'/'+today.getFullYear());const consultation=(cov_bkm6v7z4c().s[62]++,new Consultation({doctor:req.user,// get from session, e.g. cookies
patient:fields.id,Note:"Video Upload",OBJ:file._id,TEX:texfile._id,MTL:mtlfile._id,created:date}));cov_bkm6v7z4c().s[63]++;consultation.save(function(consErr,cons){cov_bkm6v7z4c().f[6]++;cov_bkm6v7z4c().s[64]++;if(consErr){cov_bkm6v7z4c().b[7][0]++;cov_bkm6v7z4c().s[65]++;res.status(400);cov_bkm6v7z4c().s[66]++;console.log("Error saving the consultation: "+consErr);}else{cov_bkm6v7z4c().b[7][1]++;cov_bkm6v7z4c().s[67]++;console.log("saved consultation "+cons);const savingDirectory=(cov_bkm6v7z4c().s[68]++,"webSite/renderPage/assets/"+cons._id+"/");cov_bkm6v7z4c().s[69]++;fs.mkdirSync(savingDirectory);cov_bkm6v7z4c().s[70]++;fs.copyFileSync(fileLocation+d+".obj",path.join(savingDirectory,cons._id+".obj"));cov_bkm6v7z4c().s[71]++;fs.copyFileSync(fileLocation+d+"_material_0_map_Kd.jpg",path.join(savingDirectory,d+"_material_0_map_Kd.jpg"));cov_bkm6v7z4c().s[72]++;fs.copyFileSync(fileLocation+d+".mtl",path.join(savingDirectory,cons._id+".mtl"));cov_bkm6v7z4c().s[73]++;res.status(200);}});});});});//remove created directories 
cov_bkm6v7z4c().s[74]++;console.log("Deleting directory "+dir);cov_bkm6v7z4c().s[75]++;rimraf(dir);cov_bkm6v7z4c().s[76]++;res.status(200).send("Success");}});}});//remove directory to save space
cov_bkm6v7z4c().s[77]++;return;}};//remove a directory of images to savespace on the server 
/**
 * Remove directory recursively
 * @param {string} dir_path
 * @see https://stackoverflow.com/a/42505874/3027390
 */function rimraf(dir_path){cov_bkm6v7z4c().f[7]++;cov_bkm6v7z4c().s[78]++;if(fs.existsSync(dir_path)){cov_bkm6v7z4c().b[8][0]++;cov_bkm6v7z4c().s[79]++;fs.readdirSync(dir_path).forEach(function(entry){cov_bkm6v7z4c().f[8]++;var entry_path=(cov_bkm6v7z4c().s[80]++,path.join(dir_path,entry));cov_bkm6v7z4c().s[81]++;if(fs.lstatSync(entry_path).isDirectory()){cov_bkm6v7z4c().b[9][0]++;cov_bkm6v7z4c().s[82]++;rimraf(entry_path);}else{cov_bkm6v7z4c().b[9][1]++;cov_bkm6v7z4c().s[83]++;fs.unlinkSync(entry_path);}});cov_bkm6v7z4c().s[84]++;fs.rmdirSync(dir_path);}else{cov_bkm6v7z4c().b[8][1]++;}}//================================================================================================
// Function developed by: Marcus Werren
// Function used to check if images object is empty
function isEmpty(obj){cov_bkm6v7z4c().f[9]++;cov_bkm6v7z4c().s[85]++;for(var prop in obj){cov_bkm6v7z4c().s[86]++;if(obj.hasOwnProperty(prop)){cov_bkm6v7z4c().b[10][0]++;cov_bkm6v7z4c().s[87]++;return false;}else{cov_bkm6v7z4c().b[10][1]++;}}cov_bkm6v7z4c().s[88]++;return JSON.stringify(obj)===JSON.stringify({});}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,