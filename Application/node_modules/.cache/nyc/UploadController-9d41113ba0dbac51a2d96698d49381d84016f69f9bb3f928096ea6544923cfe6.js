function cov_2h99awej7m(){var path="/home/marcus/UNI/Year 3/COS 301/Capstone/Feature-Improvments/3D-model-Binary-Vision/Application/api/controller/UploadController.js";var hash="27c222210fc26247e06efbfc977429994675448c";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"/home/marcus/UNI/Year 3/COS 301/Capstone/Feature-Improvments/3D-model-Binary-Vision/Application/api/controller/UploadController.js",statementMap:{"0":{start:{line:4,column:19},end:{line:4,column:40}},"1":{start:{line:5,column:24},end:{line:5,column:50}},"2":{start:{line:6,column:17},end:{line:6,column:36}},"3":{start:{line:7,column:15},end:{line:7,column:32}},"4":{start:{line:8,column:11},end:{line:8,column:24}},"5":{start:{line:9,column:13},end:{line:9,column:28}},"6":{start:{line:10,column:17},end:{line:10,column:41}},"7":{start:{line:11,column:20},end:{line:11,column:38}},"8":{start:{line:13,column:0},end:{line:112,column:1}},"9":{start:{line:20,column:21},end:{line:20,column:52}},"10":{start:{line:22,column:8},end:{line:106,column:11}},"11":{start:{line:24,column:12},end:{line:28,column:13}},"12":{start:{line:26,column:16},end:{line:26,column:33}},"13":{start:{line:27,column:16},end:{line:27,column:23}},"14":{start:{line:29,column:27},end:{line:29,column:32}},"15":{start:{line:31,column:12},end:{line:31,column:32}},"16":{start:{line:33,column:12},end:{line:105,column:13}},"17":{start:{line:36,column:16},end:{line:36,column:50}},"18":{start:{line:37,column:16},end:{line:37,column:23}},"19":{start:{line:45,column:24},end:{line:45,column:34}},"20":{start:{line:46,column:24},end:{line:46,column:81}},"21":{start:{line:47,column:16},end:{line:47,column:34}},"22":{start:{line:48,column:16},end:{line:51,column:17}},"23":{start:{line:50,column:20},end:{line:50,column:76}},"24":{start:{line:56,column:41},end:{line:56,column:72}},"25":{start:{line:57,column:16},end:{line:57,column:46}},"26":{start:{line:58,column:24},end:{line:58,column:38}},"27":{start:{line:60,column:16},end:{line:102,column:19}},"28":{start:{line:63,column:20},end:{line:101,column:21}},"29":{start:{line:64,column:24},end:{line:64,column:80}},"30":{start:{line:65,column:24},end:{line:65,column:51}},"31":{start:{line:99,column:25},end:{line:99,column:57}},"32":{start:{line:100,column:25},end:{line:100,column:37}},"33":{start:{line:109,column:8},end:{line:109,column:15}},"34":{start:{line:122,column:4},end:{line:132,column:5}},"35":{start:{line:123,column:8},end:{line:130,column:11}},"36":{start:{line:124,column:29},end:{line:124,column:55}},"37":{start:{line:125,column:12},end:{line:129,column:13}},"38":{start:{line:126,column:16},end:{line:126,column:35}},"39":{start:{line:128,column:16},end:{line:128,column:42}},"40":{start:{line:131,column:8},end:{line:131,column:31}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:18,column:18},end:{line:18,column:19}},loc:{start:{line:19,column:4},end:{line:111,column:5}},line:19},"1":{name:"(anonymous_1)",decl:{start:{line:22,column:24},end:{line:22,column:25}},loc:{start:{line:23,column:8},end:{line:106,column:9}},line:23},"2":{name:"(anonymous_2)",decl:{start:{line:60,column:75},end:{line:60,column:76}},loc:{start:{line:60,column:102},end:{line:102,column:17}},line:60},"3":{name:"rimraf",decl:{start:{line:121,column:9},end:{line:121,column:15}},loc:{start:{line:121,column:26},end:{line:133,column:1}},line:121},"4":{name:"(anonymous_4)",decl:{start:{line:123,column:41},end:{line:123,column:42}},loc:{start:{line:123,column:57},end:{line:130,column:9}},line:123}},branchMap:{"0":{loc:{start:{line:24,column:12},end:{line:28,column:13}},type:"if",locations:[{start:{line:24,column:12},end:{line:28,column:13}},{start:{line:24,column:12},end:{line:28,column:13}}],line:24},"1":{loc:{start:{line:33,column:12},end:{line:105,column:13}},type:"if",locations:[{start:{line:33,column:12},end:{line:105,column:13}},{start:{line:33,column:12},end:{line:105,column:13}}],line:33},"2":{loc:{start:{line:33,column:16},end:{line:33,column:41}},type:"binary-expr",locations:[{start:{line:33,column:16},end:{line:33,column:23}},{start:{line:33,column:27},end:{line:33,column:41}}],line:33},"3":{loc:{start:{line:63,column:20},end:{line:101,column:21}},type:"if",locations:[{start:{line:63,column:20},end:{line:101,column:21}},{start:{line:63,column:20},end:{line:101,column:21}}],line:63},"4":{loc:{start:{line:122,column:4},end:{line:132,column:5}},type:"if",locations:[{start:{line:122,column:4},end:{line:132,column:5}},{start:{line:122,column:4},end:{line:132,column:5}}],line:122},"5":{loc:{start:{line:125,column:12},end:{line:129,column:13}},type:"if",locations:[{start:{line:125,column:12},end:{line:129,column:13}},{start:{line:125,column:12},end:{line:129,column:13}}],line:125}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"27c222210fc26247e06efbfc977429994675448c"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_2h99awej7m=function(){return actualCoverage;};}return actualCoverage;}cov_2h99awej7m();//file creates by: Jacobus Janse van Rensburg
//controller for all the uploads and retrievals as well as the integrating of the c++ program 
const formidable=(cov_2h99awej7m().s[0]++,require("formidable"));const{createModel}=(cov_2h99awej7m().s[1]++,require('mongoose-gridfs'));const mongoose=(cov_2h99awej7m().s[2]++,require("mongoose"));const multer=(cov_2h99awej7m().s[3]++,require('multer'));const fs=(cov_2h99awej7m().s[4]++,require('fs'));const path=(cov_2h99awej7m().s[5]++,require('path'));const{exec}=(cov_2h99awej7m().s[6]++,require('child_process'));const{Console}=(cov_2h99awej7m().s[7]++,require("console"));cov_2h99awej7m().s[8]++;module.exports={//================================================================================================
// Function developed by: Jacobus Janse van Rensburg
// Function used to upload multiple images , store them in a temp directory/file and start the c++ program
uploadImages:function(req,res){cov_2h99awej7m().f[0]++;const form=(cov_2h99awej7m().s[9]++,formidable({multiples:true}));cov_2h99awej7m().s[10]++;form.parse(req,(err,fields,files)=>{cov_2h99awej7m().f[1]++;cov_2h99awej7m().s[11]++;if(err){cov_2h99awej7m().b[0][0]++;cov_2h99awej7m().s[12]++;console.log(err);cov_2h99awej7m().s[13]++;return;}else{cov_2h99awej7m().b[0][1]++;}const images=(cov_2h99awej7m().s[14]++,files);cov_2h99awej7m().s[15]++;console.log(images);cov_2h99awej7m().s[16]++;if((cov_2h99awej7m().b[2][0]++,!images)||(cov_2h99awej7m().b[2][1]++,images==null)){cov_2h99awej7m().b[1][0]++;cov_2h99awej7m().s[17]++;//if no images was sent we handle this by returning a error status 404
res.status(404).send("no images");cov_2h99awej7m().s[18]++;return;}else{cov_2h99awej7m().b[1][1]++;//get image data from disk using path (use fs package)
//use the file paths to send the images to the c++ program to find the images
//temp store file 
var f=(cov_2h99awej7m().s[19]++,Date.now());var dir=(cov_2h99awej7m().s[20]++,"sfmAlgorithm_linux/Executable/imageData/"+req.user+"-"+f);cov_2h99awej7m().s[21]++;fs.mkdirSync(dir);cov_2h99awej7m().s[22]++;for(let image of images["images[]"]){cov_2h99awej7m().s[23]++;fs.copyFileSync(image.path,path.join(dir,image.name));}//connect c++ program here and send file name when done c++ deletes file
//using spawn as a chid-process 
const workingDirectory=(cov_2h99awej7m().s[24]++,"sfmAlgorithm_linux/Executable");cov_2h99awej7m().s[25]++;console.log(workingDirectory);var d=(cov_2h99awej7m().s[26]++,req.user+"-"+f);cov_2h99awej7m().s[27]++;exec(`./main ${d}`,{cwd:workingDirectory,shell:true},(error,stdout,stderr)=>{cov_2h99awej7m().f[2]++;cov_2h99awej7m().s[28]++;// console.log(stdout);
// console.log(stderr);
if(error){cov_2h99awej7m().b[3][0]++;cov_2h99awej7m().s[29]++;console.log(`Process exited with error: ${error.code}`);cov_2h99awej7m().s[30]++;return res.sendStatus(500);}else{cov_2h99awej7m().b[3][1]++;cov_2h99awej7m().s[31]++;//get stl file and save it to a consultations ID
// const stlStream = fs.createReadStream(path.join(dir,"stlFile.stl"));
// const Files = createModel();
// const options = {
//     filename: video.name,
//     contentType: video.type
//   }
// Files.write(options, readStream, (err, file) => {
//     if (err) 
//     {
//         res.send(err);
//     }
//     else{
// 
//         const consultation = new Consultation(
//         {
//             doctor: req.user, // get from session, e.g. cookies
//             patient: patient._id,
//             STL: file._id,
//             Note: "Video Upload"
//         });
//         consultation.save(function (err) 
//         {
//             if (err)
//             {
//               res.send(400);
//             }
//             res.status(201);
//         });
//     }
// });
//remove
res.status(200).send("Success");cov_2h99awej7m().s[32]++;rimraf(dir);}});}});//remove directory to save space
cov_2h99awej7m().s[33]++;return;}};//remove a directory of images to savespace on the server 
/**
 * Remove directory recursively
 * @param {string} dir_path
 * @see https://stackoverflow.com/a/42505874/3027390
 */function rimraf(dir_path){cov_2h99awej7m().f[3]++;cov_2h99awej7m().s[34]++;if(fs.existsSync(dir_path)){cov_2h99awej7m().b[4][0]++;cov_2h99awej7m().s[35]++;fs.readdirSync(dir_path).forEach(function(entry){cov_2h99awej7m().f[4]++;var entry_path=(cov_2h99awej7m().s[36]++,path.join(dir_path,entry));cov_2h99awej7m().s[37]++;if(fs.lstatSync(entry_path).isDirectory()){cov_2h99awej7m().b[5][0]++;cov_2h99awej7m().s[38]++;rimraf(entry_path);}else{cov_2h99awej7m().b[5][1]++;cov_2h99awej7m().s[39]++;fs.unlinkSync(entry_path);}});cov_2h99awej7m().s[40]++;fs.rmdirSync(dir_path);}else{cov_2h99awej7m().b[4][1]++;}}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,